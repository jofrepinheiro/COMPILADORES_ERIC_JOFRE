/* This file was generated by SableCC (http://www.sablecc.org/). */

package cminus.analysis;

import java.util.*;
import cminus.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarDeclaracao(AVarDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFunDeclaracao(AFunDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMainFunDeclaracao(AMainFunDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringTipo(AStringTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntTipo(AIntTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVoidTipo(AVoidTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclParamParametro(ADeclParamParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclParamVoidParametro(ADeclParamVoidParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfelseInstrucao(AIfelseInstrucao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstExprInstrucao(AInstExprInstrucao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfPendenteInstrucao(AIfPendenteInstrucao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstWhileInstrucao(AInstWhileInstrucao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstReturnInstrucao(AInstReturnInstrucao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstrucoesCompostas(AInstrucoesCompostas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoExpr(AAtribuicaoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprAritimeticaExpr(AExprAritimeticaExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprLogicaExpr(AExprLogicaExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExprLogica(AMenorExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorigualExprLogica(AMenorigualExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExprLogica(AMaiorExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorigualExprLogica(AMaiorigualExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualExprLogica(AIgualExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteExprLogica(ADiferenteExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddExprAritimetica(AAddExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubExprAritimetica(ASubExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExprAritimetica(AMultExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExprAritimetica(ADivExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExprAritimetica(AVariavelExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroExprAritimetica(ANumeroExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprExprAritimetica(AExprExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaFunExprAritimetica(AChamadaFunExprAritimetica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKwInt(TKwInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKwString(TKwString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKwVoid(TKwVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLess(TLess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLessorequal(TLessorequal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGreater(TGreater node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGreaterorequal(TGreaterorequal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDifferent(TDifferent node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssignment(TAssignment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBra(TLBra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBra(TRBra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLCur(TLCur node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRCur(TRCur node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDQuotes(TDQuotes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShortComment(TShortComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentEnd(TCommentEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentBody(TCommentBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSlash(TSlash node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
