/* This file was generated by SableCC (http://www.sablecc.org/). */

package cminus.parser;

import cminus.node.*;
import cminus.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 0;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 1;
    }

    @Override
    public void caseTKwInt(@SuppressWarnings("unused") TKwInt node)
    {
        this.index = 2;
    }

    @Override
    public void caseTKwString(@SuppressWarnings("unused") TKwString node)
    {
        this.index = 3;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 4;
    }

    @Override
    public void caseTKwVoid(@SuppressWarnings("unused") TKwVoid node)
    {
        this.index = 5;
    }

    @Override
    public void caseTMain(@SuppressWarnings("unused") TMain node)
    {
        this.index = 6;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 7;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 8;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 9;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 10;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 11;
    }

    @Override
    public void caseTLess(@SuppressWarnings("unused") TLess node)
    {
        this.index = 12;
    }

    @Override
    public void caseTLessorequal(@SuppressWarnings("unused") TLessorequal node)
    {
        this.index = 13;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 14;
    }

    @Override
    public void caseTGreaterorequal(@SuppressWarnings("unused") TGreaterorequal node)
    {
        this.index = 15;
    }

    @Override
    public void caseTEqual(@SuppressWarnings("unused") TEqual node)
    {
        this.index = 16;
    }

    @Override
    public void caseTDifferent(@SuppressWarnings("unused") TDifferent node)
    {
        this.index = 17;
    }

    @Override
    public void caseTAssignment(@SuppressWarnings("unused") TAssignment node)
    {
        this.index = 18;
    }

    @Override
    public void caseTSemi(@SuppressWarnings("unused") TSemi node)
    {
        this.index = 19;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 20;
    }

    @Override
    public void caseTLPar(@SuppressWarnings("unused") TLPar node)
    {
        this.index = 21;
    }

    @Override
    public void caseTRPar(@SuppressWarnings("unused") TRPar node)
    {
        this.index = 22;
    }

    @Override
    public void caseTLBra(@SuppressWarnings("unused") TLBra node)
    {
        this.index = 23;
    }

    @Override
    public void caseTRBra(@SuppressWarnings("unused") TRBra node)
    {
        this.index = 24;
    }

    @Override
    public void caseTLCur(@SuppressWarnings("unused") TLCur node)
    {
        this.index = 25;
    }

    @Override
    public void caseTRCur(@SuppressWarnings("unused") TRCur node)
    {
        this.index = 26;
    }

    @Override
    public void caseTDQuotes(@SuppressWarnings("unused") TDQuotes node)
    {
        this.index = 27;
    }

    @Override
    public void caseTNum(@SuppressWarnings("unused") TNum node)
    {
        this.index = 28;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 29;
    }

    @Override
    public void caseTStar(@SuppressWarnings("unused") TStar node)
    {
        this.index = 30;
    }

    @Override
    public void caseTSlash(@SuppressWarnings("unused") TSlash node)
    {
        this.index = 31;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 32;
    }
}
