Package cminus ; 
     
Helpers
 	all = [0 .. 0xFFFF];  
    lowercase = ['a' .. 'z'];
    uppercase = ['A' .. 'Z'];
    digit = ['0' .. '9'];

    tab = 9;
    cr = 13; // carriage return
    lf = 10; //new line
    eol = cr lf | cr | lf; // End Of Line - This takes care of different platforms

    not_cr_lf = [all - [cr + lf]];
    not_star = [all - '*'];
    not_star_slash = [not_star - '/'];

    blank = (' ' | tab | eol)+;

    short_comment = '//' not_cr_lf* eol;
    //long_comment = '/*' not_star* '*'+ (not_star_slash not_star* '*'+)* '/';

    letter = lowercase | uppercase;
    
States
  normal,
  comment,
  short_comment; 
  
Tokens 
	{normal} else = 'else';
	{normal} if = 'if';
	{normal} int = 'int';
	{normal} string = 'string';
	{normal} return = 'return';
	{normal} void = 'void';
	{normal} while = 'while';
 	{normal} plus = '+';
 	{normal} minus = '-';
 	{normal} mult = '*';
 	{normal} div = '/';
 	{normal} less = '<';
 	{normal} lessorequal = '<=';
 	{normal} greater = '>';
 	{normal} greaterorequal = '>=';
 	{normal} equal = '==';
 	{normal} different = '!=';
 	{normal} assignment = '=';
 	{normal} semi = ';';
 	{normal} colon = ',';
 	{normal} l_par = '(';
 	{normal} r_par = ')';
 	{normal} l_bra = '[';
 	{normal} r_bra = ']';
 	{normal} l_cur = '{';
 	{normal} r_cur = '}';
 	{normal} d_quotes = '"';
    {normal} num = digit + digit*;
    {normal} id = letter + letter*;
    {normal} blank = blank;
    
    {normal->comment, comment}
          comment = '/*'|'/*';
          
    short_comment = short_comment;
    
    comment_end = '*/';
	{comment} comment_body = [all -['*' + '/']]*;
	{comment} star = '*';
	{comment} slash = '/';
    
Ignored Tokens
	blank,
	short_comment,
	comment, comment_end, comment_body;
  
Productions //TODO
    program = [left]:num plus [right]:num semi; 